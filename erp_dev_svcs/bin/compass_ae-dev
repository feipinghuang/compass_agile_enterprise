#!/usr/bin/env ruby

command = ARGV.shift

case command

when 'new_gem_owner'
  require 'erp_dev_svcs/commands/new_gem_owner'
  ErpDevSvcs::Commands::NewGemOwner.execute
when 'build_gems'
  require 'erp_dev_svcs/commands/build_gems'
  ErpDevSvcs::Commands::BuildGems.execute
when 'git'
  require 'erp_dev_svcs/commands/git'
  ErpDevSvcs::Commands::Git.execute
when 'test'
  require 'erp_dev_svcs/commands/test'
  ErpDevSvcs::Commands::Test.execute
when 'setup_dev_env'
  require 'erp_dev_svcs/commands/setup_dev_env'
  ErpDevSvcs::Commands::SetupDevEnv.execute
when 'push_gems'
  require 'erp_dev_svcs/commands/push_gems'
  ErpDevSvcs::Commands::PushGems.execute
when 'uninstall_gems'
  require 'erp_dev_svcs/commands/uninstall_gems'
  ErpDevSvcs::Commands::UninstallGems.execute
when 'generate_api_docs'
  require 'erp_dev_svcs/commands/generate_api_docs'
  ErpDevSvcs::Commands::GenerateApiDocs.execute  
when 'execute'
  require 'erp_dev_svcs/commands/execute_cmd'
  ErpDevSvcs::Commands::ExecuteCmd.execute
else
  puts <<-EOT
Usage: compass_ae-dev COMMAND [ARGS]

This app contains utility programs for Compass developers:
 
build_gems        Defaults to building all gems in the lib
                  directory.  You can also pass specific
                  gems.

generate_api_docs Generate API docs  

new_gem_owner     This command will add a new owner to the
                  compass gems on rubygems.org

execute           This will execute the supplied command
                  on each CompassAE mountable engine

git               This will execute the supplied git command
                  on each CompassAE mountable engine (ie. fetch, pull,status, etc)

test              Execute the RSpec test suite in each CompassAE mountable engine

setup_dev_env     Creates dev Gemfiles, runs bundler update in each CompassAE mountable engine
                  so tests will work

push_gems         Push gems to ruby gems or geminabox

uninstall_gems    Uninstall installed gems
EOT
  exit(1)
end
